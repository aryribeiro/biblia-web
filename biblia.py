import streamlit as st
import requests
import math

# Fun√ß√µes auxiliares
def fetch_verses(book, chapter):
    url = f"https://bible-api.com/{book}%20{chapter}?translation=almeida"
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        return data.get("verses", [])
    return []

def search_word(word):
    results = []
    books = [
        "G√™nesis", "√äxodo", "Lev√≠tico", "N√∫meros", "Deuteron√¥mio", "Josu√©", "Ju√≠zes", "Rute", 
        "1 Samuel", "2 Samuel", "1 Reis", "2 Reis", "1 Cr√¥nicas", "2 Cr√¥nicas", "Esdras", 
        "Neemias", "Ester", "J√≥", "Salmos", "Prov√©rbios", "Eclesiastes", "Cantares de Salom√£o", 
        "Isa√≠as", "Jeremias", "Lamenta√ß√µes", "Ezequiel", "Daniel", "Os√©ias", "Joel", "Am√≥s", 
        "Obadias", "Jonas", "Miqu√©ias", "Naum", "Habacuque", "Sofonias", "Ageu", "Zacarias", "Malaquias", 
        "Mateus", "Marcos", "Lucas", "Jo√£o", "Atos", "Romanos", "1 Cor√≠ntios", "2 Cor√≠ntios", 
        "G√°latas", "Ef√©sios", "Filipenses", "Colossenses", "1 Tessalonicenses", "2 Tessalonicenses", 
        "1 Tim√≥teo", "2 Tim√≥teo", "Tito", "Filemom", "Hebreus", "Tiago", "1 Pedro", "2 Pedro", 
        "1 Jo√£o", "2 Jo√£o", "3 Jo√£o", "Judas", "Apocalipse"
    ]
    
    for book in books:
        for chapter in range(1, 151 if book == "Salmos" else 23 if book == "Apocalipse" else 31):
            url = f"https://bible-api.com/{book}%20{chapter}?translation=almeida"
            response = requests.get(url)
            if response.status_code == 200:
                data = response.json().get("verses", [])
                for verse in data:
                    if word.lower() in verse["text"].lower():
                        results.append({
                            "book": book,
                            "chapter": verse["chapter"],
                            "verse": verse["verse"],
                            "text": verse["text"]
                        })
            else:
                break
    return results

# Configura√ß√£o do Streamlit
st.set_page_config(page_title="B√≠blia Online", layout="wide")
st.title("üìñ B√≠blia Online - Almeida")

# Menu de sele√ß√£o
books = [
    "G√™nesis", "√äxodo", "Lev√≠tico", "N√∫meros", "Deuteron√¥mio", "Josu√©", "Ju√≠zes", "Rute", 
    "1 Samuel", "2 Samuel", "1 Reis", "2 Reis", "1 Cr√¥nicas", "2 Cr√¥nicas", "Esdras", 
    "Neemias", "Ester", "J√≥", "Salmos", "Prov√©rbios", "Eclesiastes", "Cantares de Salom√£o", 
    "Isa√≠as", "Jeremias", "Lamenta√ß√µes", "Ezequiel", "Daniel", "Os√©ias", "Joel", "Am√≥s", 
    "Obadias", "Jonas", "Miqu√©ias", "Naum", "Habacuque", "Sofonias", "Ageu", "Zacarias", "Malaquias", 
    "Mateus", "Marcos", "Lucas", "Jo√£o", "Atos", "Romanos", "1 Cor√≠ntios", "2 Cor√≠ntios", 
    "G√°latas", "Ef√©sios", "Filipenses", "Colossenses", "1 Tessalonicenses", "2 Tessalonicenses", 
    "1 Tim√≥teo", "2 Tim√≥teo", "Tito", "Filemom", "Hebreus", "Tiago", "1 Pedro", "2 Pedro", 
    "1 Jo√£o", "2 Jo√£o", "3 Jo√£o", "Judas", "Apocalipse"
]
selected_book = st.selectbox("Escolha o Livro", books)

if selected_book:
    # Determinar o n√∫mero de cap√≠tulos dinamicamente
    chapters = list(range(1, 151 if selected_book == "Salmos" else 23 if selected_book == "Apocalipse" else 31))
    selected_chapter = st.selectbox("Escolha o Cap√≠tulo", chapters)

    # Exibir os vers√≠culos do cap√≠tulo escolhido
    if selected_chapter:
        verses = fetch_verses(selected_book, selected_chapter)
        if verses:
            # Pagina√ß√£o
            items_per_page = 10
            total_pages = math.ceil(len(verses) / items_per_page)
            page = st.number_input("P√°gina", min_value=1, max_value=total_pages, value=1)

            start_idx = (page - 1) * items_per_page
            end_idx = start_idx + items_per_page

            for verse in verses[start_idx:end_idx]:
                st.markdown(f"**{verse['verse']}**: {verse['text']}")

            st.markdown("---")
        else:
            st.error("Nenhum vers√≠culo encontrado para este cap√≠tulo.")

# Campo de busca por palavra
st.sidebar.header("üîç Busca por Palavra")
search_term = st.sidebar.text_input("Digite uma palavra")
if st.sidebar.button("Buscar"):
    results = search_word(search_term)
    if results:
        for result in results:
            st.sidebar.markdown(f"**{result['book']} {result['chapter']}:{result['verse']}**: {result['text']}")
    else:
        st.sidebar.error("Nenhum resultado encontrado.")
